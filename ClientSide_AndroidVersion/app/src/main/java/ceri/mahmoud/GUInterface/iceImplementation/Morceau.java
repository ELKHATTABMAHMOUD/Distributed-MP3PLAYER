// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `Lecteurmp3.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ceri.mahmoud.GUInterface.iceImplementation;

public class Morceau extends com.zeroc.Ice.Value
{
    public Morceau()
    {
        this.titre = "";
        this.artiste = "";
        this.genre = "";
        this.ressource = "";
    }

    public Morceau(String titre, String artiste, String genre, String ressource)
    {
        this.titre = titre;
        this.artiste = artiste;
        this.genre = genre;
        this.ressource = ressource;
    }

    public String titre;

    public String artiste;

    public String genre;

    public String ressource;

    public Morceau clone()
    {
        return (Morceau)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Lecteurmp3::Morceau";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    public static final long serialVersionUID = 1495600561L;

    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeString(titre);
        ostr_.writeString(artiste);
        ostr_.writeString(genre);
        ostr_.writeString(ressource);
        ostr_.endSlice();
    }

    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        titre = istr_.readString();
        artiste = istr_.readString();
        genre = istr_.readString();
        ressource = istr_.readString();
        istr_.endSlice();
    }
}
